\BOOKMARK [1][-]{section.1}{Rename Refactorings}{}% 1
\BOOKMARK [1][-]{section.2}{Preconditions of Rename Class Refactoring}{}% 2
\BOOKMARK [2][-]{subsection.2.1}{The target class cannot be duplicate with any existing class within same package after rename.}{section.2}% 3
\BOOKMARK [2][-]{subsection.2.2}{The target class cannot be duplicate with any imported class from different package after rename.}{section.2}% 4
\BOOKMARK [2][-]{subsection.2.3}{The target class file name cannot be duplicate with any existing java file name within same package after rename.}{section.2}% 5
\BOOKMARK [1][-]{section.3}{Preconditions of Rename Package Refactoring}{}% 6
\BOOKMARK [1][-]{section.4}{Preconditions of Rename Field Refactoring}{}% 7
\BOOKMARK [2][-]{subsection.4.1}{The target name of field cannot be duplicate with any existing field within same class after rename.}{section.4}% 8
\BOOKMARK [2][-]{subsection.4.2}{The target name of field cannot be duplicate with any local variable within same method after rename.}{section.4}% 9
\BOOKMARK [2][-]{subsection.4.3}{The duplicate field variable in a child class cannot reduce visibility.}{section.4}% 10
\BOOKMARK [1][-]{section.5}{Preconditions of Rename Local Variable Refactoring}{}% 11
\BOOKMARK [2][-]{subsection.5.1}{The renamed local variable cannot be duplicate with any of the existing local variable in a method.}{section.5}% 12
\BOOKMARK [2][-]{subsection.5.2}{The renamed local variable must not result in variable shadowing.}{section.5}% 13
\BOOKMARK [1][-]{section.6}{Preconditions of Rename Method Refactoring}{}% 14
